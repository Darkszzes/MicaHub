_G.SkeletonEnabled=_G.SkeletonEnabled or false
local LocalPlayerReference,RunServiceReference,PlayersServiceReference,WorkspaceReference,CameraReference=game:GetService("Players").LocalPlayer,game:GetService("RunService"),game:GetService("Players"),game:GetService("Workspace"),game:GetService("Workspace").CurrentCamera local SkeletonConnectionsR6Table,SkeletonLinesStorage={{"Head","Torso"},{"Torso","Left Arm"},{"Torso","Right Arm"},{"Torso","Left Leg"},{"Torso","Right Leg"}},{}
local function ProcessPlayerSkeletonIterationFunction(PlayerInstanceIterator)if PlayerInstanceIterator==LocalPlayerReference then return end local CharacterModelReference=PlayerInstanceIterator.Character if not CharacterModelReference or not CharacterModelReference.Parent then if SkeletonLinesStorage[PlayerInstanceIterator]then for _,LineInstance in pairs(SkeletonLinesStorage[PlayerInstanceIterator])do LineInstance.Visible=false end end return end local HumanoidInstanceReference=CharacterModelReference:FindFirstChildOfClass("Humanoid")if not HumanoidInstanceReference then return end local RootPartReference=CharacterModelReference:FindFirstChild("HumanoidRootPart")if not RootPartReference then return end if _G.SkeletonEnabled then local SkeletonColorValue=Color3.fromRGB(0,0,255)local EquippedToolReference=CharacterModelReference:FindFirstChildOfClass("Tool")if HumanoidInstanceReference.Health<=0 then SkeletonColorValue=Color3.fromRGB(255,255,255)elseif PlayerInstanceIterator:IsFriendsWith(LocalPlayerReference.UserId)then SkeletonColorValue=Color3.fromRGB(0,255,0)elseif EquippedToolReference and EquippedToolReference.Name~="Celular"and EquippedToolReference.Name~="Lixo"then SkeletonColorValue=Color3.fromRGB(255,0,0)end if not SkeletonLinesStorage[PlayerInstanceIterator]then SkeletonLinesStorage[PlayerInstanceIterator]={}for i=1,5 do local LineInstance=Drawing.new("Line")LineInstance.Thickness,LineInstance.Transparency=2,1 SkeletonLinesStorage[PlayerInstanceIterator][i]=LineInstance end end for ConnectionIndex,ConnectionPair in ipairs(SkeletonConnectionsR6Table)do local JointAReference=CharacterModelReference:FindFirstChild(ConnectionPair[1])local JointBReference=CharacterModelReference:FindFirstChild(ConnectionPair[2])local LineInstance=SkeletonLinesStorage[PlayerInstanceIterator][ConnectionIndex]if not JointAReference or not JointBReference or not LineInstance then continue end local ScreenPositionA,IsOnScreenA=CameraReference:WorldToViewportPoint(JointAReference.Position)local ScreenPositionB,IsOnScreenB=CameraReference:WorldToViewportPoint(JointBReference.Position)LineInstance.Color=SkeletonColorValue if IsOnScreenA and IsOnScreenB then LineInstance.From,LineInstance.To,LineInstance.Visible=Vector2.new(ScreenPositionA.X,ScreenPositionA.Y),Vector2.new(ScreenPositionB.X,ScreenPositionB.Y),true else LineInstance.Visible=false end end else if SkeletonLinesStorage[PlayerInstanceIterator]then for _,LineInstance in pairs(SkeletonLinesStorage[PlayerInstanceIterator])do LineInstance.Visible=false end end end end
RunServiceReference.RenderStepped:Connect(function()for _,PlayerInstanceIterator in ipairs(PlayersServiceReference:GetPlayers())do ProcessPlayerSkeletonIterationFunction(PlayerInstanceIterator)end end)PlayersServiceReference.PlayerRemoving:Connect(function(PlayerInstanceIterator)if not SkeletonLinesStorage[PlayerInstanceIterator]then return end for _,LineInstance in pairs(SkeletonLinesStorage[PlayerInstanceIterator])do LineInstance:Remove()end SkeletonLinesStorage[PlayerInstanceIterator]=nil end)
